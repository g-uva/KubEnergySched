apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: compute
spec:
  serviceName: compute
  replicas: 1
  selector:
    matchLabels:
      app: compute-node
  template:
    metadata:
      labels:
        app: compute-node
    spec:
      containers:
        - name: compute
          image: "goncaloferreirauva/computenode:latest"
          env:
            - name: REGION
              value: "{{ .Values.region }}"
            - name: CLUSTER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CPU_CAPACITY
              value: "{{ .Values.cpuCapacity }}"
            - name: ENERGY_BIAS
              value: "{{ .Values.energyBias }}"
            - name: CARBON_INTENSITY
              value: "{{ .Values.carbonIntensity }}"
          ports:
            - containerPort: 2112
              name: metrics
          volumeMounts:
            - name: proc
              mountPath: /proc
            - name: containerd-sock
              mountPath: /run/containerd/containerd.sock
              readOnly: true
        - name: scaphandre
          image: hubblo/scaphandre:latest
          securityContext:
            privileged: true
          args:
            - prometheus
            - "--address=0.0.0.0"
            - "--port=8080"
            - "--containers"
          ports:
            - name: rawmetrics
              containerPort: 8080
          volumeMounts:
            - name: proc
              mountPath: /proc
            - name: containerd-sock
              mountPath: /run/containerd/containerd.sock
              readOnly: true

      volumes:
        - name: proc
          hostPath:
            path: /proc
            type: Directory
        - name: containerd-sock
          hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
